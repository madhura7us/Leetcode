Given a string S that only contains "I" (increase) or "D" (decrease), let N = S.length.

Return any permutation A of [0, 1, ..., N] such that for all i = 0, ..., N-1:

If S[i] == "I", then A[i] < A[i+1]
If S[i] == "D", then A[i] > A[i+1]
-------------------------------------------------------------------------------------------

class Solution:
    def diStringMatch(self, S: 'str') -> 'List[int]':
        inc = 0
        dec = len(S)
        arr = [0] * (len(S)+ 1)
        temp = [char for char in S]
        for i in range(len(temp)):
            if temp[i] == 'I':
                arr[i] = inc
                inc += 1
            else:
                arr[i] = dec
                dec -= 1
        arr[len(temp)] = inc      
        return arr
